{"version":3,"sources":["components/Button.js","components/AuthorList.js","components/AuthorForm.js","views/Main.js","views/Update.js","views/AddAuthor.js","App.js","reportWebVitals.js","index.js"],"names":["props","authorId","successCallback","click","onClick","authors","useState","auth","setAuth","deleteAuthor","authorid","axios","delete","then","res","filter","_id","editAuthor","navigate","map","author","idx","name","Button","initialName","onSubmitProp","errors","text","setName","useEffect","console","log","err","index","onSubmit","e","preventDefault","type","value","onChange","target","setAuthors","loaded","setLoaded","get","data","to","AuthorList","id","setErrors","AuthorForm","put","catch","errorResponse","response","errorArr","Object","keys","key","push","message","length","post","App","className","Main","path","AddAuthor","Update","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce07db42.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default props => {\r\n    const { authorId, successCallback,click } = props;\r\n    const onclickfunction = () => {\r\n        successCallback(authorId)\r\n    }\r\n    return (\r\n        <button onClick={onclickfunction}>\r\n           {click}\r\n        </button>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\nimport Button from \"./Button\"\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (props) => {\r\n    const { authors } = props\r\n    const [auth,setAuth]=useState(authors)\r\n    const deleteAuthor=(authorid)=>{\r\n        axios.delete('http://localhost:8000/api/authors/' + authorid)\r\n        .then(res => {\r\n            setAuth(auth.filter(auth => auth._id !== authorid));\r\n        })\r\n\r\n    }\r\n    const editAuthor =(authorid)=>{\r\n        navigate(\"/edit/\"+authorid)\r\n\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <table >\r\n                <tr>\r\n                    <th>Author Name</th>\r\n                    <th>Action Avalabel</th>\r\n                </tr>\r\n\r\n                {auth.map((author, idx) => {\r\n\r\n\r\n                    return (<>\r\n\r\n                        <tr>\r\n                            <td>{author.name}</td>\r\n                            <td>\r\n                            \r\n                                <Button click=\"Delete\" successCallback={deleteAuthor} authorId={author._id}  />\r\n                                <Button click=\"edit\" successCallback={editAuthor} authorId={author._id} />\r\n                            </td>\r\n                        </tr>\r\n\r\n                       \r\n                    \r\n                       \r\n                    </>\r\n                    )\r\n\r\n                })}\r\n\r\n            </table>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (props) => {\r\n        const { initialName,onSubmitProp,errors,text} = props;\r\n        const [name, setName] = useState(initialName);\r\n        useEffect(()=>{\r\n            setName(initialName)\r\n                console.log(\"$$$$$$$$$$$$$$$$$$$\",name) \r\n        },[name])\r\n        const onSubmitHandler = e => {\r\n            e.preventDefault();\r\n            onSubmitProp({name});\r\n        }\r\n            \r\n        return (\r\n            <>\r\n            <p>{text}</p>\r\n            \r\n           {errors.map((err, index) => <p key={index}>{err}</p>)}\r\n            <form onSubmit={onSubmitHandler}>\r\n            \r\n\r\n                <p>\r\n                    <label>Name</label><br />\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"Name\" value={initialName} \r\n                        onChange={(e) => { setName(e.target.value) }} />\r\n                </p>\r\n           \r\n                <input type=\"submit\" />\r\n            </form>\r\n            </>\r\n        )\r\n        }\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport AuthorList from '../components/AuthorList';\r\nimport AuthorForm from '../components/AuthorForm';\r\nimport { Link } from '@reach/router';\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n    const [authors, setAuthors] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/authors')\r\n            .then(res =>{\r\n                setAuthors(res.data)\r\n                setLoaded(true);\r\n            });\r\n    }, [])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Link to={\"/new\"}>\r\n              Add an author\r\n            </Link>\r\n\r\n            <h3>We Have quotes by :</h3>\r\n           \r\n           \r\n           {loaded && <AuthorList authors={authors} />}\r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport AuthorForm from '../components/AuthorForm';\r\nimport { Link } from '@reach/router';\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (props) => {\r\n const {id}=props\r\n    const[name,setName]=useState(\"\")\r\n   \r\n    const [errors, setErrors] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/authors/\"+id)\r\n    \r\n            .then(res =>{\r\n                setName( res.data.name)\r\n               \r\n    \r\n                console.log(\"#############\",res.data.name,name)\r\n            });\r\n            \r\n    }, [name])\r\n\r\n\r\n    const update = (name) => {\r\n        \r\n        console.log(name)\r\n        axios.put('http://localhost:8000/api/authors/'+id, name)\r\n            .then(res => navigate(\"/\")) // If successful, do something with the response. \r\n            .catch(err => {\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                if (errorArr.length >0) {\r\n                    \r\n                }\r\n                else {\r\n                    console.log(errorArr.length)\r\n                    ;\r\n                }\r\n              \r\n                // Set Errors\r\n                setErrors(errorArr);\r\n            })\r\n        console.log(\"#######\", errors)\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Link to={\"/\"}>\r\n                Home\r\n            </Link>\r\n            <AuthorForm initialName={name} onSubmitProp={update} errors={errors} text=\"update\" />\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport AuthorForm from '../components/AuthorForm';\r\nimport { Link } from '@reach/router';\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (props) => {\r\n\r\n    const [errors, setErrors] = useState([]);\r\n\r\n\r\n\r\n    const Add = (name) => {\r\n        setErrors([]);\r\n        console.log(name)\r\n        axios.post('http://localhost:8000/api/authors', name)\r\n            .then(res => navigate(\"/\")) // If successful, do something with the response. \r\n            .catch(err => {\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                if (errorArr.length >0) {\r\n                    \r\n                }\r\n                else {\r\n                    console.log(errorArr.length)\r\n                    ;\r\n                }\r\n              \r\n                // Set Errors\r\n                setErrors(errorArr);\r\n            })\r\n      \r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Link to={\"/\"}>\r\n                Home\r\n            </Link>\r\n            <AuthorForm initialName=\"\" onSubmitProp={Add} errors={errors} text=\"add new authour\" />\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n","import Main from \"./views/Main\"\nimport Update from \"./views/Update\"\nimport AddAuthor from \"./views/AddAuthor\"\nimport { Router } from '@reach/router';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Favorite authors</h1>\n      <Router>\n      <Main path=\"/\"/>\n      <AddAuthor path=\"/new\" />\n      <Update path=\"/edit/:id\"/>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}